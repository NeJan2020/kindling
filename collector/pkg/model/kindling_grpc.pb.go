// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: kindling_grpc.proto

package model

import (
	context "context"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Type int32

const (
	Type_RPC   Type = 0
	Type_HEART Type = 1
)

var Type_name = map[int32]string{
	0: "RPC",
	1: "HEART",
}

var Type_value = map[string]int32{
	"RPC":   0,
	"HEART": 1,
}

func (x Type) String() string {
	return proto.EnumName(Type_name, int32(x))
}

func (Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7ce63d8b968de3eb, []int{0}
}

type GrpcParam struct {
	Type                 Type     `protobuf:"varint,1,opt,name=type,proto3,enum=kindling.Type" json:"type,omitempty"`
	Data                 string   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GrpcParam) Reset()         { *m = GrpcParam{} }
func (m *GrpcParam) String() string { return proto.CompactTextString(m) }
func (*GrpcParam) ProtoMessage()    {}
func (*GrpcParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_7ce63d8b968de3eb, []int{0}
}
func (m *GrpcParam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GrpcParam.Unmarshal(m, b)
}
func (m *GrpcParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GrpcParam.Marshal(b, m, deterministic)
}
func (m *GrpcParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GrpcParam.Merge(m, src)
}
func (m *GrpcParam) XXX_Size() int {
	return xxx_messageInfo_GrpcParam.Size(m)
}
func (m *GrpcParam) XXX_DiscardUnknown() {
	xxx_messageInfo_GrpcParam.DiscardUnknown(m)
}

var xxx_messageInfo_GrpcParam proto.InternalMessageInfo

func (m *GrpcParam) GetType() Type {
	if m != nil {
		return m.Type
	}
	return Type_RPC
}

func (m *GrpcParam) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type GrpcReply struct {
	Type                 Type     `protobuf:"varint,1,opt,name=type,proto3,enum=kindling.Type" json:"type,omitempty"`
	Result               string   `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GrpcReply) Reset()         { *m = GrpcReply{} }
func (m *GrpcReply) String() string { return proto.CompactTextString(m) }
func (*GrpcReply) ProtoMessage()    {}
func (*GrpcReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_7ce63d8b968de3eb, []int{1}
}
func (m *GrpcReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GrpcReply.Unmarshal(m, b)
}
func (m *GrpcReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GrpcReply.Marshal(b, m, deterministic)
}
func (m *GrpcReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GrpcReply.Merge(m, src)
}
func (m *GrpcReply) XXX_Size() int {
	return xxx_messageInfo_GrpcReply.Size(m)
}
func (m *GrpcReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GrpcReply.DiscardUnknown(m)
}

var xxx_messageInfo_GrpcReply proto.InternalMessageInfo

func (m *GrpcReply) GetType() Type {
	if m != nil {
		return m.Type
	}
	return Type_RPC
}

func (m *GrpcReply) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func init() {
	proto.RegisterEnum("kindling.Type", Type_name, Type_value)
	proto.RegisterType((*GrpcParam)(nil), "kindling.GrpcParam")
	proto.RegisterType((*GrpcReply)(nil), "kindling.GrpcReply")
}

func init() { proto.RegisterFile("kindling_grpc.proto", fileDescriptor_7ce63d8b968de3eb) }

var fileDescriptor_7ce63d8b968de3eb = []byte{
	// 201 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xce, 0xce, 0xcc, 0x4b,
	0xc9, 0xc9, 0xcc, 0x4b, 0x8f, 0x4f, 0x2f, 0x2a, 0x48, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17,
	0xe2, 0x80, 0x09, 0x2a, 0x39, 0x73, 0x71, 0xba, 0x17, 0x15, 0x24, 0x07, 0x24, 0x16, 0x25, 0xe6,
	0x0a, 0x29, 0x71, 0xb1, 0x94, 0x54, 0x16, 0xa4, 0x4a, 0x30, 0x2a, 0x30, 0x6a, 0xf0, 0x19, 0xf1,
	0xe9, 0xc1, 0x54, 0xe9, 0x85, 0x54, 0x16, 0xa4, 0x06, 0x81, 0xe5, 0x84, 0x84, 0xb8, 0x58, 0x52,
	0x12, 0x4b, 0x12, 0x25, 0x98, 0x14, 0x18, 0x35, 0x38, 0x83, 0xc0, 0x6c, 0x25, 0x77, 0x88, 0x21,
	0x41, 0xa9, 0x05, 0x39, 0x95, 0x44, 0x19, 0x22, 0xc6, 0xc5, 0x56, 0x94, 0x5a, 0x5c, 0x9a, 0x53,
	0x02, 0x35, 0x06, 0xca, 0xd3, 0x92, 0xe2, 0x62, 0x01, 0xa9, 0x12, 0x62, 0xe7, 0x62, 0x0e, 0x0a,
	0x70, 0x16, 0x60, 0x10, 0xe2, 0xe4, 0x62, 0xf5, 0x70, 0x75, 0x0c, 0x0a, 0x11, 0x60, 0x34, 0xb2,
	0xe2, 0x62, 0x01, 0x59, 0x22, 0x64, 0xc4, 0xc5, 0x12, 0x9c, 0x9a, 0x97, 0x22, 0x24, 0x8c, 0x30,
	0x19, 0xee, 0x03, 0x29, 0x34, 0x41, 0xb0, 0x8b, 0x94, 0x18, 0x9c, 0x78, 0xa3, 0xb8, 0x73, 0xf3,
	0x53, 0x52, 0x73, 0xf4, 0xc1, 0x64, 0x12, 0x1b, 0x38, 0x14, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff,
	0xff, 0x85, 0xb8, 0x60, 0xc7, 0x1c, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GrpcClient is the client API for Grpc service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GrpcClient interface {
	// Sends a grpc call with json
	Send(ctx context.Context, in *GrpcParam, opts ...grpc.CallOption) (*GrpcReply, error)
}

type grpcClient struct {
	cc *grpc.ClientConn
}

func NewGrpcClient(cc *grpc.ClientConn) GrpcClient {
	return &grpcClient{cc}
}

func (c *grpcClient) Send(ctx context.Context, in *GrpcParam, opts ...grpc.CallOption) (*GrpcReply, error) {
	out := new(GrpcReply)
	err := c.cc.Invoke(ctx, "/kindling.Grpc/Send", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GrpcServer is the server API for Grpc service.
type GrpcServer interface {
	// Sends a grpc call with json
	Send(context.Context, *GrpcParam) (*GrpcReply, error)
}

// UnimplementedGrpcServer can be embedded to have forward compatible implementations.
type UnimplementedGrpcServer struct {
}

func (*UnimplementedGrpcServer) Send(ctx context.Context, req *GrpcParam) (*GrpcReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Send not implemented")
}

func RegisterGrpcServer(s *grpc.Server, srv GrpcServer) {
	s.RegisterService(&_Grpc_serviceDesc, srv)
}

func _Grpc_Send_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GrpcParam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcServer).Send(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kindling.Grpc/Send",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcServer).Send(ctx, req.(*GrpcParam))
	}
	return interceptor(ctx, in, info, handler)
}

var _Grpc_serviceDesc = grpc.ServiceDesc{
	ServiceName: "kindling.Grpc",
	HandlerType: (*GrpcServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Send",
			Handler:    _Grpc_Send_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "kindling_grpc.proto",
}
